name: Bot Pipeline

on:
  push:
    branches:
      - master

env:
  TEAMSFX_ENV_NAME: dev
  M365_TENANT_ID: "1905f3e7-ee16-4428-b996-4b87a06a1bc4"

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Teams Toolkit
        run: npm install -g @microsoft/teamsapp-cli

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build dotnet
        run: |
          dotnet restore
          dotnet publish meu_chat.csproj -c Release -o ./publish

      - name: Login Teams Toolkit CLI with Azure SP
        run: |
          teamsapp auth login azure --service-principal true --username "450d825e-fecc-4a97-a9bb-23e35c59ba32" --password "8HxpGDjts9xSzELiDOP7Vq6.gu3CTJq-G0" --tenant "1905f3e7-ee16-4428-b996-4b87a06a1bc4" --interactive false
  
      - name: Provision
        run: |
          teamsapp provision --env ${{ env.TEAMSFX_ENV_NAME }} --ignore-env-file true --interactive false

      - name: Deploy
        run: teamsapp deploy --env $TEAMSFX_ENV_NAME

      - name: Package
        run: |
          teamsapp package --env $TEAMSFX_ENV_NAME

      - name: Install o365 cli
        run: npm install -g @pnp/cli-microsoft365

      - name: Login M365
        run: m365 login --authType password --userName "renan@n3tecnologia.com" --password "llsxgzcjvcnfvdqf" --tenantId "1905f3e7-ee16-4428-b996-4b87a06a1bc4"
      
      - name: Publish or update Teams App
        run: |
          app=$(m365 teams app list --output json | jq '.[] | select(.externalId == "'"$APPID"'")')
          if [ -z "$app" ]; then
            echo "Publishing app..."
            m365 teams app publish --filePath ./appPackage/build/appPackage.zip
          else
            appId=$(echo $app | jq -r '.id')
            echo "Updating app $appId..."
            m365 teams app update --id $appId --filePath ./appPackage/build/appPackage.zip
          fi
